version: 2
jobs:
  test-and-build:
    docker:
      - image: circleci/golang:1.12

    working_directory: /go/src/gogen_pilots
    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            go get -t ./...
            go get github.com/onsi/ginkgo/ginkgo
#
#      - run:
#          name: Run unit tests
#          command: |
#            ginkgo -r

      - run:
          name: Build mac executable
          command: |
            GOOS="darwin" GOARCH="amd64" go build -o gogen_pilots_mac

      - run:
          name: Build windows executable
          command: |
            GOOS="windows" GOARCH="386" go build -o gogen_pilots_win.exe

      - run:
          name: Build Linux executable
          command: |
            GOOS="linux" GOARCH="amd64" go build -o gogen_pilots_linux

      - run:
          name: Build test data generator
          command: |
            cd generate_test_data && GOOS="darwin" GOARCH="amd64" go build

      - run:
          name: Copy build artifacts to subdirectory
          command: |
            mkdir artifacts && cp gogen_pilots_mac gogen_pilots_win.exe gogen_pilots_linux generate_test_data/generate_test_data ./artifacts


      - persist_to_workspace:
          root: './artifacts'
          paths:
            - gogen_pilots_mac
            - gogen_pilots_linux
            - gogen_pilots_win.exe
            - generate_test_data

  deploy:
    docker:
      - image: cibuilds/github:0.10

    steps:
      - attach_workspace:
          at: ./artifacts

      - run: |
          VERSION=$(./artifacts/gogen_pilots_linux version)
          ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/

workflows:
  version: 2
  build-workflow:
    jobs:
      - test-and-build
      - hold:
          type: approval
          requires:
            - test-and-build
      - deploy:
          requires:
            - hold
